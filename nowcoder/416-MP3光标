# 416. |MP3光标位置

## Question description



MP3 Player因为屏幕较小，显示歌曲列表的时候每屏只能显示几首歌曲，用户要通过上下键才能浏览所有的歌曲。为了简化处理，假设每屏只能显示4首歌曲，光标初始的位置为第1首歌。



 


现在要实现通过上下键控制光标移动来浏览歌曲列表，控制逻辑如下：




歌曲总数<=4的时候，不需要翻页，只是挪动光标位置。



光标在第一首歌曲上时，按Up键光标挪到最后一首歌曲；光标在最后一首歌曲时，按Down键光标挪到第一首歌曲。





其他情况下用户按Up键，光标挪到上一首歌曲；用户按Down键，光标挪到下一首歌曲。





  2. 歌曲总数大于4的时候（以一共有10首歌为例）：

    

特殊翻页：屏幕显示的是第一页（即显示第1 – 4首）时，光标在第一首歌曲上，用户按Up键后，屏幕要显示最后一页（即显示第7-10首歌），同时光标放到最后一首歌上。同样的，屏幕显示最后一页时，光标在最后一首歌曲上，用户按Down键，屏幕要显示第一页，光标挪到第一首歌上。









一般翻页：屏幕显示的不是第一页时，光标在当前屏幕显示的第一首歌曲时，用户按Up键后，屏幕从当前歌曲的上一首开始显示，光标也挪到上一首歌曲。光标当前屏幕的最后一首歌时的Down键处理也类似。









其他情况，不用翻页，只是挪动光标就行。

    


## Solution

Language: **['C']**

```


#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
 
string s;
 
int main() {
    int n;
    while (scanf("%d", &n) == 1) {
        cin >> s;
        int cur_head = 1, cur_pos = 0;
        if (n <= 4) {
            for (int i = 0; i < (int)s.size(); i++) {
                if (s[i] == 'U') {
                    cur_pos = (cur_pos + n - 1) % n;
                } else {
                    cur_pos = (cur_pos + 1) % n;
                }
            }
        } else {
            for (int i = 0; i < (int)s.size(); i++) {
                if (s[i] == 'U') {
                    if (cur_head == 1 && cur_pos == 0) {
                        cur_head = n - 3;
                        cur_pos = 3;
                    } else {
                        if (cur_pos > 0) {
                            cur_pos--;
                        } else {
                            cur_head--;
                        }
                    }
                } else {
                    if (cur_head == n - 3 && cur_pos == 3) {
                        cur_head = 1;
                        cur_pos = 0;
                    } else {
                        if (cur_pos < 3) {
                            cur_pos++;
                        } else {
                            cur_head++;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < min(n, 4); i++) {
            if (i) {
                printf(" ");
            }
            printf("%d", cur_head + i);
        }
        printf("\n%d\n", cur_head + cur_pos);
    }
    return 0;
}
```


