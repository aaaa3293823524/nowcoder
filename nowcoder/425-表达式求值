# 425. |表达式求值

## Question description


给定一个字符串描述的算术表达式，计算出结果值。输入字符串长度不超过100，合法的字符包括”+, -, *, /, (, )”，”0-9”，字符串内容的合法性及表达式语法的合法性由做题者检查。本题目只涉及整型计算。


## Solution

Language: **['C']**

```


#include<iostream>
#include<stdio.h>
#include<stack>
using namespace std;
stack <int> num;
stack <char> op;
string a; 

int opfirst(char temp)
{   int ans;
    switch(temp)
    {
        case '+': ans=1;break;
        case '-': ans=1;break;
        case '*': ans=2;break;
        case '/': ans=2;break;
        case '(': ans=0;break;
        case ')': ans=0;break;
    }
    return ans;
}

int opst(int a,int b, char k)
{
    int ans;
    switch(k)
    {
        case '+': ans=a+b;break;
        case '-': ans=a-b;break;
        case '*': ans=a*b;break;
        case '/': ans=a/b;break;
    }
    return ans;
}
int main()
{
    while(cin>>a)
    {
        for(int i=0;a[i]!=0;i++)
        {
            if(a[i]>='0'&&a[i]<='9')
            {
                int temp=0;
                while(a[i]>='0'&&a[i]<='9')
                {
                    temp=temp*10+a[i]-'0'; 
                    i+=1;
                } 
                num.push(temp);
                i-=1;
            }
            else if (a[i]==')')
            {
                while(op.top()!='('&&op.empty()==false)
                {
                    int a=num.top();
                    num.pop();
                    int b=num.top();
                    num.pop();
                    int ans=opst(b,a,op.top());
                    num.push(ans);
                    op.pop();
                }
                op.pop();
            }
            else if (a[i]=='(')
                {
                op.push(a[i]);
                }
            else
                 {
                while(op.empty()==false&& opfirst(a[i])<=opfirst(op.top()))
                  {
                      int a=num.top();
                    num.pop();
                    int b=num.top();
                    num.pop();
                    int ans=opst(b,a,op.top());
                    num.push(ans);
                    op.pop();
                  }
                  op.push(a[i]);
                 }
        }
        while(op.empty()==false)
        {
                    int a=num.top();
                    num.pop();
                    int b=num.top();
                    num.pop();
                    int ans=opst(b,a,op.top());
                    num.push(ans);
                    op.pop();
        }
        cout<<num.top()<<endl;
    }
}
```


