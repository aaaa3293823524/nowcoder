# 197. |简单计算器

## Question description


    读入一个只包含 +, -, *, / 的非负整数计算表达式，计算该表达式的值。


## Solution

Language: **['C']**

```


#include <stdio.h>
#include <string.h>
#include <stack>
#define N 300
using namespace std;
stack<char> op;//栈，存储运算符
stack<double> data;//栈，存储数据
char str[N];//用来存用户输入的字符串
 
void Clear()//清空数据栈和运算符栈
{
    while(!op.empty()) op.pop();
    while(!data.empty()) data.pop();
}
 
int Priority(char c)//判断运算符优先级
{
    if(c=='+' || c=='-') return 1;
    else if(c=='*' || c=='/') return 2;
    else return 0;//如果是'#'则优先级为0
}
 
void GetNum(int &x, int &i)//读取字符串中的数字，x为数值，i为字符串下标
{
    x=0;
    while(str[i]!=' '&&str[i]!='\0')
    {
        x=x*10+(str[i]-'0');
        i++;
    }
    if(str[i]==' ') i++;
}
 
void CalOnce()
{//取两个数、一个运算符，运算结果存入data栈
    if(data.size()<2) return;//没那么多数就别算了(貌似用不到？)
    double b=data.top();
    data.pop();
    double a=data.top();
    data.pop();
    switch(op.top())
    {
        case '+': data.push(a+b); break;
        case '-': data.push(a-b); break;
        case '*': data.push(a*b); break;
        case '/': data.push(a/b); break;
    }
    op.pop();
    return;
}
 
void Calculate()
{//根据字符串进行运算，并输出结果
    int x, i=0;//从头开始分析字符串
    int len=strlen(str);
    Clear();//清空运算符栈和数据栈
    op.push('#');//#用来标记开始，其优先级为0
    while(i<len)
    {
        if('0'<=str[i]&&str[i]<='9')//碰到数字直接压入数据栈
        {
            GetNum(x, i);
            data.push((double)x);
        }
        else//碰到了运算符的话
        {
            if(Priority(str[i])>Priority(op.top())) op.push(str[i]);
            //优先级较高就直接压入运算符栈
            else{//优先级不高于栈顶运算符的话
                while(Priority(str[i])<=Priority(op.top()))
                {//不停运算直到可以压入
                    CalOnce();
                }
                op.push(str[i]);//压入运算符
            }
            i+=2;//跳过这个运算符顺便跳过空格
        }
    }
    while(Priority(op.top())!=0) CalOnce();
    //最后输入的数没处理，处理一下，假装输入了一个优先级很低的运算符
   printf("%.2lf\n", data.top());//输出结果
}
 
int main()
{
    while(gets(str))
    {
        if(strcmp("0", str)==0) break;
        Calculate();//计算并输出结果
    }
    return 0;
}
```


