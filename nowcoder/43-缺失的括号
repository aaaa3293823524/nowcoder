# 43. |缺失的括号

## Question description


一个完整的括号字符串定义规则如下: 1、空字符串是完整的。 2、如果s是完整的字符串，那么(s)也是完整的。 3、如果s和t是完整的字符串，将它们连接起来形成的st也是完整的。 例如，"(()())", ""和"(())()"是完整的括号字符串，"())(", "()(" 和 ")"是不完整的括号字符串。 牛牛有一个括号字符串s,现在需要在其中任意位置尽量少地添加括号,将其转化为一个完整的括号字符串。请问牛牛至少需要添加多少个括号。


## Solution

Language: **['Java']**

```


/*
    思路：类似栈的思想  左右括号相遇时可消除
         countL 记录最终正确括号消除后所剩的'('的数目
         countL 记录最终正确括号消除后所剩的')'的数目
*/
import java.util.*;
public class Main{
    public static void main(String[] args){
        try(Scanner in = new Scanner(System.in)){
            System.out.println(helper(in.nextLine()));
        }
    }
    public static int helper(String s){
        char[] cs = s.toCharArray();
        int countL = 0,countR = 0,i = 0;
        while(i < cs.length){
            if(cs[i] == '('){
                countL++;
            }else {
                // 遇到右括号时，若前面有左括号未匹配，则匹配消除   如果没有，则右括号数目加1
                if(countL != 0){
                    countL--;
                }else{
                    countR++;
                }
            }
            i++;
        }
        return countL + countR;
    }
}
```


